version: '3.4'

services:
  auth_configuration_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: "auth-configuration"
      POSTGRES_PASSWORD: "auth-configuration"
      POSTGRES_DB: "configuration"

  auth_persisted_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: "auth-persisted"
      POSTGRES_PASSWORD: "auth-persisted"
      POSTGRES_DB: "persisted"

  auth_identity_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: "auth-identity"
      POSTGRES_PASSWORD: "auth-identity"
      POSTGRES_DB: "identity"

  auth_admin_log_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: "auth-admin-log"
      POSTGRES_PASSWORD: "auth-admin-log"
      POSTGRES_DB: "admin-log"

  mcms_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: "mcms-data"
      POSTGRES_PASSWORD: "mcms-data"
      POSTGRES_DB: "mcms"

  auth_sts:
    build:
      context: ../../../../
      dockerfile: Operations/Docker/Dockerfiles/Gulp-Node-ASPNetCore.Dockerfile
      args:
        SERVICE_NAME: "Auth.STS.Identity"
        SERVICE_TYPE: "Authentication"
    networks:
      - service
      - frontend
    links:
      - auth_configuration_database
      - auth_persisted_database
      - auth_identity_database
    environment:
      VIRTUAL_HOST: "account.${PRIMARY_DOMAIN}"
      VIRTUAL_PORT: 80
      VIRTUAL_PROTO: http
      ConnectionStrings__ConfigurationDbConnection: "host=auth_configuration_database;port=5432;database=configuration;username=auth-configuration;password=auth-configuration;"
      ConnectionStrings__PersistedGrantDbConnection: "host=auth_persisted_database;port=5432;database=persisted;username=auth-persisted;password=auth-persisted;"
      ConnectionStrings__IdentityDbConnection: "host=auth_identity_database;port=5432;database=identity;username=auth-identity;password=auth-identity;"

  auth_admin_api:
    build:
      context: ../../../../
      dockerfile: Operations/Docker/Dockerfiles/ASPNetCore.Dockerfile
      args:
        SERVICE_NAME: "Auth.Admin.Api"
        SERVICE_TYPE: "Authentication"
    networks:
      - service
      - frontend
    links:
      - auth_configuration_database
      - auth_persisted_database
      - auth_identity_database
      - auth_admin_log_database
      - auth_sts
    environment:
      VIRTUAL_HOST: "api.admin.account.${PRIMARY_DOMAIN}"
      VIRTUAL_PORT: 80
      VIRTUAL_PROTO: http
      ConnectionStrings__ConfigurationDbConnection: "host=auth_configuration_database;port=5432;database=configuration;username=auth-configuration;password=auth-configuration;"
      ConnectionStrings__PersistedGrantDbConnection: "host=auth_persisted_database;port=5432;database=persisted;username=auth-persisted;password=auth-persisted;"
      ConnectionStrings__IdentityDbConnection: "host=auth_identity_database;port=5432;database=identity;username=auth-identity;password=auth-identity;"
      ConnectionStrings__AdminLogDbConnection: "host=auth_admin_log_database;port=5432;database=admin-log;username=auth-admin-log;password=auth-admin-log;"
      AdminConfiguration__IdentityServerBaseUrl: "https://account.${PRIMARY_DOMAIN}"

  auth_admin:
    build:
      context: ../../../../
      dockerfile: Operations/Docker/Dockerfiles/Gulp-Node-ASPNetCore.Dockerfile
      args:
        SERVICE_NAME: "Auth.Admin"
        SERVICE_TYPE: "Authentication"
    networks:
      - service
      - frontend
    links:
      - auth_configuration_database
      - auth_persisted_database
      - auth_identity_database
      - auth_admin_log_database
      - auth_sts
    environment:
      VIRTUAL_HOST: "admin.account.${PRIMARY_DOMAIN}"
      VIRTUAL_PORT: 80
      VIRTUAL_PROTO: http
      ConnectionStrings__ConfigurationDbConnection: "host=auth_configuration_database;port=5432;database=configuration;username=auth-configuration;password=auth-configuration;"
      ConnectionStrings__PersistedGrantDbConnection: "host=auth_persisted_database;port=5432;database=persisted;username=auth-persisted;password=auth-persisted;"
      ConnectionStrings__IdentityDbConnection: "host=auth_identity_database;port=5432;database=identity;username=auth-identity;password=auth-identity;"
      ConnectionStrings__AdminLogDbConnection: "host=auth_admin_log_database;port=5432;database=admin-log;username=auth-admin-log;password=auth-admin-log;"
      AdminConfiguration__IdentityServerBaseUrl: "http://account.${PRIMARY_DOMAIN}"
      AdminConfiguration__IdentityAdminRedirectUri: "http://admin.account.${PRIMARY_DOMAIN}/signin-oidc"
      AdminConfiguration__IdentityAdminBaseUrl: "http://admin.account.${PRIMARY_DOMAIN}"
      AdminConfiguration__IdentityAdminApiSwaggerUIRedirectUrl: "http://admin.account.${PRIMARY_DOMAIN}/swagger/oauth2-redirect.html"

  auth_admin_seed:
    build:
      context: ../../../../
      dockerfile: Operations/Docker/Dockerfiles/ASPNetCore.Dockerfile
      args:
        SERVICE_NAME: "Auth.Admin"
        SERVICE_TYPE: "Authentication"
    command: ["dotnet", "Auth.Admin.dll", "/seed"]
    networks:
      - service
    links:
      - auth_configuration_database
      - auth_persisted_database
      - auth_identity_database
      - auth_admin_log_database
    environment:
      ConnectionStrings__ConfigurationDbConnection: "host=auth_configuration_database;port=5432;database=configuration;username=auth-configuration;password=auth-configuration;"
      ConnectionStrings__PersistedGrantDbConnection: "host=auth_persisted_database;port=5432;database=persisted;username=auth-persisted;password=auth-persisted;"
      ConnectionStrings__IdentityDbConnection: "host=auth_identity_database;port=5432;database=identity;username=auth-identity;password=auth-identity;"
      ConnectionStrings__AdminLogDbConnection: "host=auth_admin_log_database;port=5432;database=admin-log;username=auth-admin-log;password=auth-admin-log;"
      AdminSeedConfiguration__AdminUserName: "test_admin"
      AdminSeedConfiguration__AdminPassword: "Password12345"
      AdminSeedConfiguration__AdminEmail: "admin@test.com"

  mcms_api:
    build:
      context: ../../../../
      dockerfile: Operations/Docker/Dockerfiles/ASPNetCore.Dockerfile
      args:
        SERVICE_NAME: "Data.WebApi"
        SERVICE_TYPE: "API"
    networks:
      - service
      - frontend
    links:
      - auth_sts
      - mcms_database
    environment:
      ConnectionStrings__DefaultConnection: "host=mcms_database;port=5432;database=mcms;username=mcms-data;password=mcms-data;"
      AuthenticationServerConfig__Authority: "https://account.${PRIMARY_DOMAIN}"
      AuthenticationServerConfig__RequireHttpsMetadata: "true"

networks:
  frontend:
    external:
      name: webproxy
  service:
